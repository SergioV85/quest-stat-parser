{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Description": "The AWS CloudFormation template for Quest Stat Parser server",
    "Resources": {
      "ServerlessDeploymentBucket": {
        "Type": "AWS::S3::Bucket"
      },
      "GetGamesLogGroup": {
        "Type": "AWS::Logs::LogGroup",
        "Properties": {
          "LogGroupName": "/aws/lambda/quest-server-parser-prod-getGames"
        }
      },
      "GetGameDetailsLogGroup": {
        "Type": "AWS::Logs::LogGroup",
        "Properties": {
          "LogGroupName": "/aws/lambda/quest-server-parser-prod-getGameDetails"
        }
      },
      "UpdateGameLogGroup": {
        "Type": "AWS::Logs::LogGroup",
        "Properties": {
          "LogGroupName": "/aws/lambda/quest-server-parser-prod-updateGame"
        }
      },
      "IamRoleLambdaExecution": {
        "Type": "AWS::IAM::Role",
        "Properties": {
          "AssumeRolePolicyDocument": {
            "Version": "2012-10-17",
            "Statement": [
              {
                "Effect": "Allow",
                "Principal": {
                  "Service": [
                    "lambda.amazonaws.com"
                  ]
                },
                "Action": [
                  "sts:AssumeRole"
                ]
              }
            ]
          },
          "Policies": [
            {
              "PolicyName": {
                "Fn::Join": [
                  "-",
                  [
                    "prod",
                    "quest-server-parser",
                    "lambda"
                  ]
                ]
              },
              "PolicyDocument": {
                "Version": "2012-10-17",
                "Statement": [
                  {
                    "Effect": "Allow",
                    "Action": [
                      "logs:CreateLogStream"
                    ],
                    "Resource": [
                      {
                        "Fn::Sub": "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/quest-server-parser-prod-getGames:*"
                      },
                      {
                        "Fn::Sub": "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/quest-server-parser-prod-getGameDetails:*"
                      },
                      {
                        "Fn::Sub": "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/quest-server-parser-prod-updateGame:*"
                      }
                    ]
                  },
                  {
                    "Effect": "Allow",
                    "Action": [
                      "logs:PutLogEvents"
                    ],
                    "Resource": [
                      {
                        "Fn::Sub": "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/quest-server-parser-prod-getGames:*:*"
                      },
                      {
                        "Fn::Sub": "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/quest-server-parser-prod-getGameDetails:*:*"
                      },
                      {
                        "Fn::Sub": "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/quest-server-parser-prod-updateGame:*:*"
                      }
                    ]
                  }
                ]
              }
            }
          ],
          "Path": "/",
          "RoleName": {
            "Fn::Join": [
              "-",
              [
                "quest-server-parser",
                "prod",
                "eu-central-1",
                "lambdaRole"
              ]
            ]
          }
        }
      },
      "GetGamesLambdaFunction": {
        "Type": "AWS::Lambda::Function",
        "Properties": {
          "Code": {
            "S3Bucket": {
              "Ref": "ServerlessDeploymentBucket"
            },
            "S3Key": "serverless/quest-server-parser/prod/1512514869246-2017-12-05T23:01:09.246Z/quest-server-parser.zip"
          },
          "FunctionName": "quest-server-parser-prod-getGames",
          "Handler": "server.handler",
          "MemorySize": 1024,
          "Role": {
            "Fn::GetAtt": [
              "IamRoleLambdaExecution",
              "Arn"
            ]
          },
          "Runtime": "nodejs6.10",
          "Timeout": 6,
          "Environment": {
            "Variables": {}
          }
        },
        "DependsOn": [
          "GetGamesLogGroup",
          "IamRoleLambdaExecution"
        ]
      },
      "GetGameDetailsLambdaFunction": {
        "Type": "AWS::Lambda::Function",
        "Properties": {
          "Code": {
            "S3Bucket": {
              "Ref": "ServerlessDeploymentBucket"
            },
            "S3Key": "serverless/quest-server-parser/prod/1512514869246-2017-12-05T23:01:09.246Z/quest-server-parser.zip"
          },
          "FunctionName": "quest-server-parser-prod-getGameDetails",
          "Handler": "server.handler",
          "MemorySize": 1024,
          "Role": {
            "Fn::GetAtt": [
              "IamRoleLambdaExecution",
              "Arn"
            ]
          },
          "Runtime": "nodejs6.10",
          "Timeout": 6,
          "Environment": {
            "Variables": {}
          }
        },
        "DependsOn": [
          "GetGameDetailsLogGroup",
          "IamRoleLambdaExecution"
        ]
      },
      "UpdateGameLambdaFunction": {
        "Type": "AWS::Lambda::Function",
        "Properties": {
          "Code": {
            "S3Bucket": {
              "Ref": "ServerlessDeploymentBucket"
            },
            "S3Key": "serverless/quest-server-parser/prod/1512514869246-2017-12-05T23:01:09.246Z/quest-server-parser.zip"
          },
          "FunctionName": "quest-server-parser-prod-updateGame",
          "Handler": "server.handler",
          "MemorySize": 1024,
          "Role": {
            "Fn::GetAtt": [
              "IamRoleLambdaExecution",
              "Arn"
            ]
          },
          "Runtime": "nodejs6.10",
          "Timeout": 6,
          "Environment": {
            "Variables": {}
          }
        },
        "DependsOn": [
          "UpdateGameLogGroup",
          "IamRoleLambdaExecution"
        ]
      },
      "ApiGatewayRestApi": {
        "Type": "AWS::ApiGateway::RestApi",
        "Properties": {
          "Name": "prod-quest-server-parser"
        }
      },
      "ApiGatewayResourceGames": {
        "Type": "AWS::ApiGateway::Resource",
        "Properties": {
          "ParentId": {
            "Fn::GetAtt": [
              "ApiGatewayRestApi",
              "RootResourceId"
            ]
          },
          "PathPart": "games",
          "RestApiId": {
            "Ref": "ApiGatewayRestApi"
          }
        }
      },
      "ApiGatewayResourceGame": {
        "Type": "AWS::ApiGateway::Resource",
        "Properties": {
          "ParentId": {
            "Fn::GetAtt": [
              "ApiGatewayRestApi",
              "RootResourceId"
            ]
          },
          "PathPart": "game",
          "RestApiId": {
            "Ref": "ApiGatewayRestApi"
          }
        }
      },
      "ApiGatewayResourceGamesProxyVar": {
        "Type": "AWS::ApiGateway::Resource",
        "Properties": {
          "ParentId": {
            "Ref": "ApiGatewayResourceGames"
          },
          "PathPart": "{proxy+}",
          "RestApiId": {
            "Ref": "ApiGatewayRestApi"
          }
        }
      },
      "ApiGatewayMethodGamesGet": {
        "Type": "AWS::ApiGateway::Method",
        "Properties": {
          "HttpMethod": "GET",
          "RequestParameters": {},
          "ResourceId": {
            "Ref": "ApiGatewayResourceGames"
          },
          "RestApiId": {
            "Ref": "ApiGatewayRestApi"
          },
          "ApiKeyRequired": false,
          "AuthorizationType": "NONE",
          "Integration": {
            "IntegrationHttpMethod": "POST",
            "Type": "AWS_PROXY",
            "Uri": {
              "Fn::Join": [
                "",
                [
                  "arn:aws:apigateway:",
                  {
                    "Ref": "AWS::Region"
                  },
                  ":lambda:path/2015-03-31/functions/",
                  {
                    "Fn::GetAtt": [
                      "GetGamesLambdaFunction",
                      "Arn"
                    ]
                  },
                  "/invocations"
                ]
              ]
            }
          },
          "MethodResponses": []
        }
      },
      "ApiGatewayMethodGameGet": {
        "Type": "AWS::ApiGateway::Method",
        "Properties": {
          "HttpMethod": "GET",
          "RequestParameters": {},
          "ResourceId": {
            "Ref": "ApiGatewayResourceGame"
          },
          "RestApiId": {
            "Ref": "ApiGatewayRestApi"
          },
          "ApiKeyRequired": false,
          "AuthorizationType": "NONE",
          "Integration": {
            "IntegrationHttpMethod": "POST",
            "Type": "AWS_PROXY",
            "Uri": {
              "Fn::Join": [
                "",
                [
                  "arn:aws:apigateway:",
                  {
                    "Ref": "AWS::Region"
                  },
                  ":lambda:path/2015-03-31/functions/",
                  {
                    "Fn::GetAtt": [
                      "GetGameDetailsLambdaFunction",
                      "Arn"
                    ]
                  },
                  "/invocations"
                ]
              ]
            }
          },
          "MethodResponses": []
        }
      },
      "ApiGatewayMethodGamesProxyVarPut": {
        "Type": "AWS::ApiGateway::Method",
        "Properties": {
          "HttpMethod": "PUT",
          "RequestParameters": {},
          "ResourceId": {
            "Ref": "ApiGatewayResourceGamesProxyVar"
          },
          "RestApiId": {
            "Ref": "ApiGatewayRestApi"
          },
          "ApiKeyRequired": false,
          "AuthorizationType": "NONE",
          "Integration": {
            "IntegrationHttpMethod": "POST",
            "Type": "AWS_PROXY",
            "Uri": {
              "Fn::Join": [
                "",
                [
                  "arn:aws:apigateway:",
                  {
                    "Ref": "AWS::Region"
                  },
                  ":lambda:path/2015-03-31/functions/",
                  {
                    "Fn::GetAtt": [
                      "UpdateGameLambdaFunction",
                      "Arn"
                    ]
                  },
                  "/invocations"
                ]
              ]
            }
          },
          "MethodResponses": []
        }
      },
      "ApiGatewayDeployment1512514869304": {
        "Type": "AWS::ApiGateway::Deployment",
        "Properties": {
          "RestApiId": {
            "Ref": "ApiGatewayRestApi"
          },
          "StageName": "prod"
        },
        "DependsOn": [
          "ApiGatewayMethodGamesGet",
          "ApiGatewayMethodGameGet",
          "ApiGatewayMethodGamesProxyVarPut"
        ]
      },
      "GetGamesLambdaPermissionApiGateway": {
        "Type": "AWS::Lambda::Permission",
        "Properties": {
          "FunctionName": {
            "Fn::GetAtt": [
              "GetGamesLambdaFunction",
              "Arn"
            ]
          },
          "Action": "lambda:InvokeFunction",
          "Principal": "apigateway.amazonaws.com",
          "SourceArn": {
            "Fn::Join": [
              "",
              [
                "arn:aws:execute-api:",
                {
                  "Ref": "AWS::Region"
                },
                ":",
                {
                  "Ref": "AWS::AccountId"
                },
                ":",
                {
                  "Ref": "ApiGatewayRestApi"
                },
                "/*/*"
              ]
            ]
          }
        }
      },
      "GetGameDetailsLambdaPermissionApiGateway": {
        "Type": "AWS::Lambda::Permission",
        "Properties": {
          "FunctionName": {
            "Fn::GetAtt": [
              "GetGameDetailsLambdaFunction",
              "Arn"
            ]
          },
          "Action": "lambda:InvokeFunction",
          "Principal": "apigateway.amazonaws.com",
          "SourceArn": {
            "Fn::Join": [
              "",
              [
                "arn:aws:execute-api:",
                {
                  "Ref": "AWS::Region"
                },
                ":",
                {
                  "Ref": "AWS::AccountId"
                },
                ":",
                {
                  "Ref": "ApiGatewayRestApi"
                },
                "/*/*"
              ]
            ]
          }
        }
      },
      "UpdateGameLambdaPermissionApiGateway": {
        "Type": "AWS::Lambda::Permission",
        "Properties": {
          "FunctionName": {
            "Fn::GetAtt": [
              "UpdateGameLambdaFunction",
              "Arn"
            ]
          },
          "Action": "lambda:InvokeFunction",
          "Principal": "apigateway.amazonaws.com",
          "SourceArn": {
            "Fn::Join": [
              "",
              [
                "arn:aws:execute-api:",
                {
                  "Ref": "AWS::Region"
                },
                ":",
                {
                  "Ref": "AWS::AccountId"
                },
                ":",
                {
                  "Ref": "ApiGatewayRestApi"
                },
                "/*/*"
              ]
            ]
          }
        }
      }
    },
    "Outputs": {
      "ServerlessDeploymentBucketName": {
        "Value": {
          "Ref": "ServerlessDeploymentBucket"
        }
      },
      "ServiceEndpoint": {
        "Description": "URL of the service endpoint",
        "Value": {
          "Fn::Join": [
            "",
            [
              "https://",
              {
                "Ref": "ApiGatewayRestApi"
              },
              ".execute-api.eu-central-1.amazonaws.com/prod"
            ]
          ]
        }
      }
    }
  }